/**
 * Script para verificar el Facebook Access Token
 * Uso: node test-facebook-token.js
 */

const axios = require('axios');
require('dotenv').config();

const PAGE_ID = process.env.FACEBOOK_PAGE_ID;
const ACCESS_TOKEN = process.env.FACEBOOK_ACCESS_TOKEN;

console.log('üîç Verificando configuraci√≥n de Facebook...\n');
console.log('üìÑ Page ID:', PAGE_ID);
console.log('üîë Access Token:', ACCESS_TOKEN ? `${ACCESS_TOKEN.substring(0, 20)}...` : 'NO CONFIGURADO');
console.log('');

async function verifyToken() {
    try {
        // 1. Verificar que el token es v√°lido
        console.log('1Ô∏è‚É£ Verificando validez del token...');
        const debugResponse = await axios.get(
            `https://graph.facebook.com/v18.0/debug_token`,
            {
                params: {
                    input_token: ACCESS_TOKEN,
                    access_token: ACCESS_TOKEN
                }
            }
        );
        
        console.log('‚úÖ Token v√°lido');
        console.log('   Tipo:', debugResponse.data.data.type);
        console.log('   App ID:', debugResponse.data.data.app_id);
        console.log('   Usuario ID:', debugResponse.data.data.user_id);
        console.log('   Expira:', debugResponse.data.data.expires_at === 0 ? 'Nunca' : new Date(debugResponse.data.data.expires_at * 1000).toLocaleString());
        console.log('   Permisos:', debugResponse.data.data.scopes?.join(', ') || 'No disponibles');
        console.log('');

        // 2. Obtener informaci√≥n de la p√°gina
        console.log('2Ô∏è‚É£ Obteniendo informaci√≥n de la p√°gina...');
        const pageResponse = await axios.get(
            `https://graph.facebook.com/v18.0/${PAGE_ID}`,
            {
                params: {
                    fields: 'id,name,category,picture',
                    access_token: ACCESS_TOKEN
                }
            }
        );
        
        console.log('‚úÖ P√°gina encontrada');
        console.log('   ID:', pageResponse.data.id);
        console.log('   Nombre:', pageResponse.data.name);
        console.log('   Categor√≠a:', pageResponse.data.category);
        console.log('');

        // 3. Verificar permisos de la p√°gina
        console.log('3Ô∏è‚É£ Verificando permisos espec√≠ficos...');
        try {
            const permsResponse = await axios.get(
                `https://graph.facebook.com/v18.0/me/permissions`,
                {
                    params: {
                        access_token: ACCESS_TOKEN
                    }
                }
            );
            
            console.log('‚úÖ Permisos del token:');
            permsResponse.data.data.forEach(perm => {
                const status = perm.status === 'granted' ? '‚úÖ' : '‚ùå';
                console.log(`   ${status} ${perm.permission}`);
            });
        } catch (error) {
            console.log('‚ö†Ô∏è  No se pudieron obtener permisos detallados');
        }
        console.log('');

        // 4. Verificar permisos cr√≠ticos
        console.log('4Ô∏è‚É£ Verificando permisos cr√≠ticos para publicaci√≥n...');
        const requiredPerms = ['pages_show_list', 'pages_manage_posts'];
        const grantedPerms = debugResponse.data.data.scopes || [];
        
        requiredPerms.forEach(perm => {
            const hasIt = grantedPerms.includes(perm);
            console.log(`   ${hasIt ? '‚úÖ' : '‚ùå'} ${perm}`);
        });
        
        console.log('');
        console.log('‚úÖ ¬°Verificaci√≥n completa!');
        console.log('');
        console.log('üìã RESUMEN:');
        console.log('   - Token v√°lido y activo');
        console.log('   - P√°gina accesible');
        console.log('   - Permisos verificados');
        console.log('');
        console.log('üéâ ¬°Todo parece estar configurado correctamente!');
        
    } catch (error) {
        console.error('');
        console.error('‚ùå ERROR:', error.response?.data?.error?.message || error.message);
        console.error('');
        
        if (error.response?.data?.error) {
            console.error('Detalles del error:');
            console.error('   Tipo:', error.response.data.error.type);
            console.error('   C√≥digo:', error.response.data.error.code);
            console.error('   Mensaje:', error.response.data.error.message);
        }
        
        console.error('');
        console.error('üí° SOLUCI√ìN:');
        console.error('   1. Ve a https://developers.facebook.com/tools/explorer/');
        console.error('   2. Genera un nuevo User Access Token con:');
        console.error('      - pages_show_list');
        console.error('      - pages_manage_posts');
        console.error('   3. Consulta: /me/accounts');
        console.error('   4. Copia el "access_token" de tu p√°gina');
        console.error('   5. Actualiza FACEBOOK_ACCESS_TOKEN en .env y Railway');
        console.error('');
        
        process.exit(1);
    }
}

if (!PAGE_ID || !ACCESS_TOKEN) {
    console.error('‚ùå ERROR: Configuraci√≥n incompleta');
    console.error('');
    console.error('Aseg√∫rate de tener estas variables en tu .env:');
    console.error('   FACEBOOK_PAGE_ID=tu_page_id');
    console.error('   FACEBOOK_ACCESS_TOKEN=tu_access_token');
    console.error('');
    process.exit(1);
}

verifyToken();
